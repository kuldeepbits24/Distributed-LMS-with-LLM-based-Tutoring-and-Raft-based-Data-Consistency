# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lms_pb2 as lms__pb2


class LMSStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/lms.LMS/Register',
                request_serializer=lms__pb2.RegisterRequest.SerializeToString,
                response_deserializer=lms__pb2.RegisterResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/lms.LMS/Login',
                request_serializer=lms__pb2.LoginRequest.SerializeToString,
                response_deserializer=lms__pb2.LoginResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/lms.LMS/Logout',
                request_serializer=lms__pb2.LogoutRequest.SerializeToString,
                response_deserializer=lms__pb2.LogoutResponse.FromString,
                )
        self.PostAssignment = channel.unary_unary(
                '/lms.LMS/PostAssignment',
                request_serializer=lms__pb2.PostAssignmentRequest.SerializeToString,
                response_deserializer=lms__pb2.PostAssignmentResponse.FromString,
                )
        self.GetAssignments = channel.unary_unary(
                '/lms.LMS/GetAssignments',
                request_serializer=lms__pb2.GetAssignmentsRequest.SerializeToString,
                response_deserializer=lms__pb2.GetAssignmentsResponse.FromString,
                )
        self.SubmitAssignment = channel.unary_unary(
                '/lms.LMS/SubmitAssignment',
                request_serializer=lms__pb2.SubmitAssignmentRequest.SerializeToString,
                response_deserializer=lms__pb2.SubmitAssignmentResponse.FromString,
                )
        self.ViewGrades = channel.unary_unary(
                '/lms.LMS/ViewGrades',
                request_serializer=lms__pb2.ViewGradesRequest.SerializeToString,
                response_deserializer=lms__pb2.ViewGradesResponse.FromString,
                )
        self.PostQuery = channel.unary_unary(
                '/lms.LMS/PostQuery',
                request_serializer=lms__pb2.PostQueryRequest.SerializeToString,
                response_deserializer=lms__pb2.PostQueryResponse.FromString,
                )
        self.ViewAllQueries = channel.unary_unary(
                '/lms.LMS/ViewAllQueries',
                request_serializer=lms__pb2.ViewAllQueriesRequest.SerializeToString,
                response_deserializer=lms__pb2.ViewAllQueriesResponse.FromString,
                )
        self.GradeAssignment = channel.unary_unary(
                '/lms.LMS/GradeAssignment',
                request_serializer=lms__pb2.GradeAssignmentRequest.SerializeToString,
                response_deserializer=lms__pb2.GradeAssignmentResponse.FromString,
                )
        self.appendEntries = channel.unary_unary(
                '/lms.LMS/appendEntries',
                request_serializer=lms__pb2.AppendEntriesRequest.SerializeToString,
                response_deserializer=lms__pb2.AppendEntriesResponse.FromString,
                )
        self.GetLLMAnswer = channel.unary_unary(
                '/lms.LMS/GetLLMAnswer',
                request_serializer=lms__pb2.GetLLMAnswerRequest.SerializeToString,
                response_deserializer=lms__pb2.GetLLMAnswerResponse.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/lms.LMS/Heartbeat',
                request_serializer=lms__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=lms__pb2.HeartbeatResponse.FromString,
                )
        self.requestVote = channel.unary_unary(
                '/lms.LMS/requestVote',
                request_serializer=lms__pb2.RequestVoteRequest.SerializeToString,
                response_deserializer=lms__pb2.RequestVoteResponse.FromString,
                )


class LMSServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostAssignment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssignments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitAssignment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewGrades(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewAllQueries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GradeAssignment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def appendEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLLMAnswer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def requestVote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LMSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=lms__pb2.RegisterRequest.FromString,
                    response_serializer=lms__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=lms__pb2.LoginRequest.FromString,
                    response_serializer=lms__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=lms__pb2.LogoutRequest.FromString,
                    response_serializer=lms__pb2.LogoutResponse.SerializeToString,
            ),
            'PostAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.PostAssignment,
                    request_deserializer=lms__pb2.PostAssignmentRequest.FromString,
                    response_serializer=lms__pb2.PostAssignmentResponse.SerializeToString,
            ),
            'GetAssignments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssignments,
                    request_deserializer=lms__pb2.GetAssignmentsRequest.FromString,
                    response_serializer=lms__pb2.GetAssignmentsResponse.SerializeToString,
            ),
            'SubmitAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitAssignment,
                    request_deserializer=lms__pb2.SubmitAssignmentRequest.FromString,
                    response_serializer=lms__pb2.SubmitAssignmentResponse.SerializeToString,
            ),
            'ViewGrades': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewGrades,
                    request_deserializer=lms__pb2.ViewGradesRequest.FromString,
                    response_serializer=lms__pb2.ViewGradesResponse.SerializeToString,
            ),
            'PostQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.PostQuery,
                    request_deserializer=lms__pb2.PostQueryRequest.FromString,
                    response_serializer=lms__pb2.PostQueryResponse.SerializeToString,
            ),
            'ViewAllQueries': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewAllQueries,
                    request_deserializer=lms__pb2.ViewAllQueriesRequest.FromString,
                    response_serializer=lms__pb2.ViewAllQueriesResponse.SerializeToString,
            ),
            'GradeAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.GradeAssignment,
                    request_deserializer=lms__pb2.GradeAssignmentRequest.FromString,
                    response_serializer=lms__pb2.GradeAssignmentResponse.SerializeToString,
            ),
            'appendEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.appendEntries,
                    request_deserializer=lms__pb2.AppendEntriesRequest.FromString,
                    response_serializer=lms__pb2.AppendEntriesResponse.SerializeToString,
            ),
            'GetLLMAnswer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLLMAnswer,
                    request_deserializer=lms__pb2.GetLLMAnswerRequest.FromString,
                    response_serializer=lms__pb2.GetLLMAnswerResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=lms__pb2.HeartbeatRequest.FromString,
                    response_serializer=lms__pb2.HeartbeatResponse.SerializeToString,
            ),
            'requestVote': grpc.unary_unary_rpc_method_handler(
                    servicer.requestVote,
                    request_deserializer=lms__pb2.RequestVoteRequest.FromString,
                    response_serializer=lms__pb2.RequestVoteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lms.LMS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LMS(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Register',
            lms__pb2.RegisterRequest.SerializeToString,
            lms__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Login',
            lms__pb2.LoginRequest.SerializeToString,
            lms__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Logout',
            lms__pb2.LogoutRequest.SerializeToString,
            lms__pb2.LogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/PostAssignment',
            lms__pb2.PostAssignmentRequest.SerializeToString,
            lms__pb2.PostAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssignments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/GetAssignments',
            lms__pb2.GetAssignmentsRequest.SerializeToString,
            lms__pb2.GetAssignmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/SubmitAssignment',
            lms__pb2.SubmitAssignmentRequest.SerializeToString,
            lms__pb2.SubmitAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ViewGrades(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/ViewGrades',
            lms__pb2.ViewGradesRequest.SerializeToString,
            lms__pb2.ViewGradesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/PostQuery',
            lms__pb2.PostQueryRequest.SerializeToString,
            lms__pb2.PostQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ViewAllQueries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/ViewAllQueries',
            lms__pb2.ViewAllQueriesRequest.SerializeToString,
            lms__pb2.ViewAllQueriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GradeAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/GradeAssignment',
            lms__pb2.GradeAssignmentRequest.SerializeToString,
            lms__pb2.GradeAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def appendEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/appendEntries',
            lms__pb2.AppendEntriesRequest.SerializeToString,
            lms__pb2.AppendEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLLMAnswer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/GetLLMAnswer',
            lms__pb2.GetLLMAnswerRequest.SerializeToString,
            lms__pb2.GetLLMAnswerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Heartbeat',
            lms__pb2.HeartbeatRequest.SerializeToString,
            lms__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def requestVote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/requestVote',
            lms__pb2.RequestVoteRequest.SerializeToString,
            lms__pb2.RequestVoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
